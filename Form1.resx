<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="pictureBox1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>